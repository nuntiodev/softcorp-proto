// source: softcorp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.Softcorp.AdminCollaborationRequest', null, global);
goog.exportSymbol('proto.Softcorp.AdminCollaborationResponse', null, global);
goog.exportSymbol('proto.Softcorp.AdminUserRequest', null, global);
goog.exportSymbol('proto.Softcorp.AdminUserResponse', null, global);
goog.exportSymbol('proto.Softcorp.AgeGroup', null, global);
goog.exportSymbol('proto.Softcorp.AuthPublicRequest', null, global);
goog.exportSymbol('proto.Softcorp.AuthPublicResponse', null, global);
goog.exportSymbol('proto.Softcorp.ClientApp', null, global);
goog.exportSymbol('proto.Softcorp.ClientMetadata', null, global);
goog.exportSymbol('proto.Softcorp.Collaboration', null, global);
goog.exportSymbol('proto.Softcorp.CollaborationRole', null, global);
goog.exportSymbol('proto.Softcorp.CollaborationType', null, global);
goog.exportSymbol('proto.Softcorp.ConnectAdminRequest', null, global);
goog.exportSymbol('proto.Softcorp.ConnectAdminResponse', null, global);
goog.exportSymbol('proto.Softcorp.ConnectMetric', null, global);
goog.exportSymbol('proto.Softcorp.ConnectMetrics', null, global);
goog.exportSymbol('proto.Softcorp.CountryCode', null, global);
goog.exportSymbol('proto.Softcorp.CountryCodeType', null, global);
goog.exportSymbol('proto.Softcorp.Gender', null, global);
goog.exportSymbol('proto.Softcorp.Grant', null, global);
goog.exportSymbol('proto.Softcorp.GrantType', null, global);
goog.exportSymbol('proto.Softcorp.LanguageCode', null, global);
goog.exportSymbol('proto.Softcorp.LanguageCodeType', null, global);
goog.exportSymbol('proto.Softcorp.OauthResponse', null, global);
goog.exportSymbol('proto.Softcorp.Organization', null, global);
goog.exportSymbol('proto.Softcorp.PublicDashboardRequest', null, global);
goog.exportSymbol('proto.Softcorp.PublicDashboardResponse', null, global);
goog.exportSymbol('proto.Softcorp.PublicUserRequest', null, global);
goog.exportSymbol('proto.Softcorp.PublicUserResponse', null, global);
goog.exportSymbol('proto.Softcorp.Request', null, global);
goog.exportSymbol('proto.Softcorp.ResponeType', null, global);
goog.exportSymbol('proto.Softcorp.Response', null, global);
goog.exportSymbol('proto.Softcorp.Scope', null, global);
goog.exportSymbol('proto.Softcorp.ScopeType', null, global);
goog.exportSymbol('proto.Softcorp.Ssn', null, global);
goog.exportSymbol('proto.Softcorp.SsnProvider', null, global);
goog.exportSymbol('proto.Softcorp.SsnProviderType', null, global);
goog.exportSymbol('proto.Softcorp.Timespan', null, global);
goog.exportSymbol('proto.Softcorp.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ConnectMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.ConnectMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ConnectMetric.displayName = 'proto.Softcorp.ConnectMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ConnectMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.ConnectMetrics.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.ConnectMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ConnectMetrics.displayName = 'proto.Softcorp.ConnectMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Collaboration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Collaboration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Collaboration.displayName = 'proto.Softcorp.Collaboration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Organization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Organization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Organization.displayName = 'proto.Softcorp.Organization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Scope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Scope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Scope.displayName = 'proto.Softcorp.Scope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Grant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Grant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Grant.displayName = 'proto.Softcorp.Grant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.OauthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.OauthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.OauthResponse.displayName = 'proto.Softcorp.OauthResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.LanguageCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.LanguageCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.LanguageCode.displayName = 'proto.Softcorp.LanguageCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.CountryCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.CountryCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.CountryCode.displayName = 'proto.Softcorp.CountryCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.SsnProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.SsnProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.SsnProvider.displayName = 'proto.Softcorp.SsnProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Ssn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Ssn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Ssn.displayName = 'proto.Softcorp.Ssn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.User.displayName = 'proto.Softcorp.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ClientMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.ClientMetadata.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.ClientMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ClientMetadata.displayName = 'proto.Softcorp.ClientMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ClientApp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.ClientApp.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.ClientApp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ClientApp.displayName = 'proto.Softcorp.ClientApp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.PublicUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.PublicUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.PublicUserRequest.displayName = 'proto.Softcorp.PublicUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.PublicUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.PublicUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.PublicUserResponse.displayName = 'proto.Softcorp.PublicUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AdminUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.AdminUserRequest.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.AdminUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AdminUserRequest.displayName = 'proto.Softcorp.AdminUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AdminUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.AdminUserResponse.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.AdminUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AdminUserResponse.displayName = 'proto.Softcorp.AdminUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AuthPublicRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.AuthPublicRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AuthPublicRequest.displayName = 'proto.Softcorp.AuthPublicRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AuthPublicResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.AuthPublicResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AuthPublicResponse.displayName = 'proto.Softcorp.AuthPublicResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ConnectAdminRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.ConnectAdminRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ConnectAdminRequest.displayName = 'proto.Softcorp.ConnectAdminRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.ConnectAdminResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.ConnectAdminResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.ConnectAdminResponse.displayName = 'proto.Softcorp.ConnectAdminResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.PublicDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.PublicDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.PublicDashboardRequest.displayName = 'proto.Softcorp.PublicDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.PublicDashboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.PublicDashboardResponse.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.PublicDashboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.PublicDashboardResponse.displayName = 'proto.Softcorp.PublicDashboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AdminCollaborationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.AdminCollaborationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AdminCollaborationRequest.displayName = 'proto.Softcorp.AdminCollaborationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.AdminCollaborationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Softcorp.AdminCollaborationResponse.repeatedFields_, null);
};
goog.inherits(proto.Softcorp.AdminCollaborationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.AdminCollaborationResponse.displayName = 'proto.Softcorp.AdminCollaborationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Request.displayName = 'proto.Softcorp.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Softcorp.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Softcorp.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Softcorp.Response.displayName = 'proto.Softcorp.Response';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ConnectMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ConnectMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ConnectMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    numberofrequests: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numberofconsenttrue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numberofconsentfalse: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numberofagegroup1to12: jspb.Message.getFieldWithDefault(msg, 5, 0),
    numberofagegroup13to19: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numberofagegroup20to29: jspb.Message.getFieldWithDefault(msg, 7, 0),
    numberofagegroup30to39: jspb.Message.getFieldWithDefault(msg, 8, 0),
    numberofagegroup40to49: jspb.Message.getFieldWithDefault(msg, 9, 0),
    numberofagegroup50to59: jspb.Message.getFieldWithDefault(msg, 10, 0),
    numberofagegroup60to69: jspb.Message.getFieldWithDefault(msg, 11, 0),
    numberofagegroup70to79: jspb.Message.getFieldWithDefault(msg, 12, 0),
    numberofagegroup80to89: jspb.Message.getFieldWithDefault(msg, 13, 0),
    numberofagegroup90to99: jspb.Message.getFieldWithDefault(msg, 14, 0),
    numberofagegroup100to120: jspb.Message.getFieldWithDefault(msg, 15, 0),
    numberoffemales: jspb.Message.getFieldWithDefault(msg, 16, 0),
    numberofmales: jspb.Message.getFieldWithDefault(msg, 17, 0),
    numberofothers: jspb.Message.getFieldWithDefault(msg, 18, 0),
    amountfromdk: jspb.Message.getFieldWithDefault(msg, 19, 0),
    amountfromno: jspb.Message.getFieldWithDefault(msg, 20, 0),
    amountfromde: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ConnectMetric}
 */
proto.Softcorp.ConnectMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ConnectMetric;
  return proto.Softcorp.ConnectMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ConnectMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ConnectMetric}
 */
proto.Softcorp.ConnectMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofrequests(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofconsenttrue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofconsentfalse(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup1to12(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup13to19(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup20to29(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup30to39(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup40to49(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup50to59(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup60to69(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup70to79(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup80to89(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup90to99(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofagegroup100to120(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberoffemales(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofmales(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofothers(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountfromdk(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountfromno(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmountfromde(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ConnectMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ConnectMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ConnectMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getNumberofrequests();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNumberofconsenttrue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumberofconsentfalse();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNumberofagegroup1to12();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getNumberofagegroup13to19();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getNumberofagegroup20to29();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getNumberofagegroup30to39();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getNumberofagegroup40to49();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getNumberofagegroup50to59();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNumberofagegroup60to69();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getNumberofagegroup70to79();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getNumberofagegroup80to89();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getNumberofagegroup90to99();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getNumberofagegroup100to120();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getNumberoffemales();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getNumberofmales();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getNumberofothers();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getAmountfromdk();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getAmountfromno();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getAmountfromde();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp date = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.ConnectMetric.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
*/
proto.Softcorp.ConnectMetric.prototype.setDate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.clearDate = function() {
  return this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ConnectMetric.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 numberOfRequests = 2;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofrequests = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofrequests = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 numberOfConsentTrue = 3;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofconsenttrue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofconsenttrue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 numberOfConsentFalse = 4;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofconsentfalse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofconsentfalse = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 numberOfAgeGroup1To12 = 5;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup1to12 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup1to12 = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 numberOfAgeGroup13To19 = 6;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup13to19 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup13to19 = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 numberOfAgeGroup20To29 = 7;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup20to29 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup20to29 = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 numberOfAgeGroup30To39 = 8;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup30to39 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup30to39 = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 numberOfAgeGroup40To49 = 9;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup40to49 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup40to49 = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 numberOfAgeGroup50To59 = 10;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup50to59 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup50to59 = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 numberOfAgeGroup60To69 = 11;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup60to69 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup60to69 = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 numberOfAgeGroup70To79 = 12;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup70to79 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup70to79 = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 numberOfAgeGroup80To89 = 13;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup80to89 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup80to89 = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 numberOfAgeGroup90To99 = 14;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup90to99 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup90to99 = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 numberOfAgeGroup100To120 = 15;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofagegroup100to120 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofagegroup100to120 = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 numberOfFemales = 16;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberoffemales = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberoffemales = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 numberOfMales = 17;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofmales = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofmales = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 numberOfOthers = 18;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getNumberofothers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setNumberofothers = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 amountFromDk = 19;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getAmountfromdk = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setAmountfromdk = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 amountFromNo = 20;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getAmountfromno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setAmountfromno = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 amountFromDe = 21;
 * @return {number}
 */
proto.Softcorp.ConnectMetric.prototype.getAmountfromde = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ConnectMetric} returns this
 */
proto.Softcorp.ConnectMetric.prototype.setAmountfromde = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.ConnectMetrics.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ConnectMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ConnectMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ConnectMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricsList: jspb.Message.toObjectList(msg.getMetricsList(),
    proto.Softcorp.ConnectMetric.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ConnectMetrics}
 */
proto.Softcorp.ConnectMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ConnectMetrics;
  return proto.Softcorp.ConnectMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ConnectMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ConnectMetrics}
 */
proto.Softcorp.ConnectMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.ConnectMetric;
      reader.readMessage(value,proto.Softcorp.ConnectMetric.deserializeBinaryFromReader);
      msg.addMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ConnectMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ConnectMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ConnectMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Softcorp.ConnectMetric.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConnectMetric metrics = 1;
 * @return {!Array<!proto.Softcorp.ConnectMetric>}
 */
proto.Softcorp.ConnectMetrics.prototype.getMetricsList = function() {
  return /** @type{!Array<!proto.Softcorp.ConnectMetric>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.ConnectMetric, 1));
};


/**
 * @param {!Array<!proto.Softcorp.ConnectMetric>} value
 * @return {!proto.Softcorp.ConnectMetrics} returns this
*/
proto.Softcorp.ConnectMetrics.prototype.setMetricsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Softcorp.ConnectMetric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.ConnectMetric}
 */
proto.Softcorp.ConnectMetrics.prototype.addMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Softcorp.ConnectMetric, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ConnectMetrics} returns this
 */
proto.Softcorp.ConnectMetrics.prototype.clearMetricsList = function() {
  return this.setMetricsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Collaboration.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Collaboration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Collaboration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Collaboration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    objectid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    collaborationtype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    accepted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    hashedcode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    role: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sendat: (f = msg.getSendat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    acceptedat: (f = msg.getAcceptedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Collaboration}
 */
proto.Softcorp.Collaboration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Collaboration;
  return proto.Softcorp.Collaboration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Collaboration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Collaboration}
 */
proto.Softcorp.Collaboration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectid(value);
      break;
    case 5:
      var value = /** @type {!proto.Softcorp.CollaborationType} */ (reader.readEnum());
      msg.setCollaborationtype(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedcode(value);
      break;
    case 8:
      var value = /** @type {!proto.Softcorp.CollaborationRole} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSendat(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcceptedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Collaboration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Collaboration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Collaboration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Collaboration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getObjectid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCollaborationtype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getAccepted();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getHashedcode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSendat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Softcorp.Collaboration.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.Softcorp.Collaboration.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.Softcorp.Collaboration.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string objectId = 4;
 * @return {string}
 */
proto.Softcorp.Collaboration.prototype.getObjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setObjectid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional CollaborationType collaborationType = 5;
 * @return {!proto.Softcorp.CollaborationType}
 */
proto.Softcorp.Collaboration.prototype.getCollaborationtype = function() {
  return /** @type {!proto.Softcorp.CollaborationType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.Softcorp.CollaborationType} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setCollaborationtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bool accepted = 6;
 * @return {boolean}
 */
proto.Softcorp.Collaboration.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setAccepted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string hashedCode = 7;
 * @return {string}
 */
proto.Softcorp.Collaboration.prototype.getHashedcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setHashedcode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional CollaborationRole role = 8;
 * @return {!proto.Softcorp.CollaborationRole}
 */
proto.Softcorp.Collaboration.prototype.getRole = function() {
  return /** @type {!proto.Softcorp.CollaborationRole} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.Softcorp.CollaborationRole} value
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp sendAt = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.Collaboration.prototype.getSendat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.Collaboration} returns this
*/
proto.Softcorp.Collaboration.prototype.setSendat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.clearSendat = function() {
  return this.setSendat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Collaboration.prototype.hasSendat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.Collaboration.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.Collaboration} returns this
*/
proto.Softcorp.Collaboration.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Collaboration.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp acceptedAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.Collaboration.prototype.getAcceptedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.Collaboration} returns this
*/
proto.Softcorp.Collaboration.prototype.setAcceptedat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Collaboration} returns this
 */
proto.Softcorp.Collaboration.prototype.clearAcceptedat = function() {
  return this.setAcceptedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Collaboration.prototype.hasAcceptedat = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Organization.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Organization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Organization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Organization.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ownerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    organizationname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contactemail: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isowner: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Organization}
 */
proto.Softcorp.Organization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Organization;
  return proto.Softcorp.Organization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Organization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Organization}
 */
proto.Softcorp.Organization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactemail(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsowner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Organization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Organization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Organization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Organization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrganizationname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContactemail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsowner();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Softcorp.Organization.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ownerId = 2;
 * @return {string}
 */
proto.Softcorp.Organization.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string organizationName = 3;
 * @return {string}
 */
proto.Softcorp.Organization.prototype.getOrganizationname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.setOrganizationname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string contactEmail = 4;
 * @return {string}
 */
proto.Softcorp.Organization.prototype.getContactemail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.setContactemail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.Organization.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.Organization} returns this
*/
proto.Softcorp.Organization.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Organization.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.Organization.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.Organization} returns this
*/
proto.Softcorp.Organization.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Organization.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool isOwner = 7;
 * @return {boolean}
 */
proto.Softcorp.Organization.prototype.getIsowner = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Organization} returns this
 */
proto.Softcorp.Organization.prototype.setIsowner = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Scope.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Scope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Scope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Scope.toObject = function(includeInstance, msg) {
  var f, obj = {
    scopetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    readid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    reademail: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    readgender: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    readcreatedat: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    offlineaccess: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    readname: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    readbirthday: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    readcountry: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    readpreflangauge: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    name: jspb.Message.getFieldWithDefault(msg, 11, ""),
    key: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Scope}
 */
proto.Softcorp.Scope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Scope;
  return proto.Softcorp.Scope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Scope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Scope}
 */
proto.Softcorp.Scope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.ScopeType} */ (reader.readEnum());
      msg.setScopetype(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReademail(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadgender(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadcreatedat(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOfflineaccess(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadname(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadbirthday(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadcountry(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadpreflangauge(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Scope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Scope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Scope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Scope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScopetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReadid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReademail();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReadgender();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReadcreatedat();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getOfflineaccess();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getReadname();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getReadbirthday();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getReadcountry();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getReadpreflangauge();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional ScopeType scopeType = 1;
 * @return {!proto.Softcorp.ScopeType}
 */
proto.Softcorp.Scope.prototype.getScopetype = function() {
  return /** @type {!proto.Softcorp.ScopeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.ScopeType} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setScopetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool readId = 2;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool readEmail = 3;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReademail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReademail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool readGender = 4;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadgender = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadgender = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool readCreatedAt = 5;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadcreatedat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadcreatedat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool offlineAccess = 6;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getOfflineaccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setOfflineaccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool readName = 7;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadname = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadname = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool readBirthday = 8;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadbirthday = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadbirthday = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool readCountry = 9;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadcountry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadcountry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool readPrefLangauge = 10;
 * @return {boolean}
 */
proto.Softcorp.Scope.prototype.getReadpreflangauge = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setReadpreflangauge = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string name = 11;
 * @return {string}
 */
proto.Softcorp.Scope.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string key = 12;
 * @return {string}
 */
proto.Softcorp.Scope.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Scope} returns this
 */
proto.Softcorp.Scope.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Grant.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Grant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Grant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Grant.toObject = function(includeInstance, msg) {
  var f, obj = {
    granttype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Grant}
 */
proto.Softcorp.Grant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Grant;
  return proto.Softcorp.Grant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Grant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Grant}
 */
proto.Softcorp.Grant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.GrantType} */ (reader.readEnum());
      msg.setGranttype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Grant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Grant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Grant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Grant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGranttype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional GrantType grantType = 1;
 * @return {!proto.Softcorp.GrantType}
 */
proto.Softcorp.Grant.prototype.getGranttype = function() {
  return /** @type {!proto.Softcorp.GrantType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.GrantType} value
 * @return {!proto.Softcorp.Grant} returns this
 */
proto.Softcorp.Grant.prototype.setGranttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.Grant.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Grant} returns this
 */
proto.Softcorp.Grant.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.OauthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.OauthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.OauthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.OauthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.OauthResponse}
 */
proto.Softcorp.OauthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.OauthResponse;
  return proto.Softcorp.OauthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.OauthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.OauthResponse}
 */
proto.Softcorp.OauthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.ResponeType} */ (reader.readEnum());
      msg.setResponsetype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.OauthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.OauthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.OauthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.OauthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ResponeType responseType = 1;
 * @return {!proto.Softcorp.ResponeType}
 */
proto.Softcorp.OauthResponse.prototype.getResponsetype = function() {
  return /** @type {!proto.Softcorp.ResponeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.ResponeType} value
 * @return {!proto.Softcorp.OauthResponse} returns this
 */
proto.Softcorp.OauthResponse.prototype.setResponsetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.OauthResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.OauthResponse} returns this
 */
proto.Softcorp.OauthResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.LanguageCode.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.LanguageCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.LanguageCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.LanguageCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    languagecodetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.LanguageCode}
 */
proto.Softcorp.LanguageCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.LanguageCode;
  return proto.Softcorp.LanguageCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.LanguageCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.LanguageCode}
 */
proto.Softcorp.LanguageCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.LanguageCodeType} */ (reader.readEnum());
      msg.setLanguagecodetype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.LanguageCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.LanguageCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.LanguageCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.LanguageCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguagecodetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional LanguageCodeType languageCodeType = 1;
 * @return {!proto.Softcorp.LanguageCodeType}
 */
proto.Softcorp.LanguageCode.prototype.getLanguagecodetype = function() {
  return /** @type {!proto.Softcorp.LanguageCodeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.LanguageCodeType} value
 * @return {!proto.Softcorp.LanguageCode} returns this
 */
proto.Softcorp.LanguageCode.prototype.setLanguagecodetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.LanguageCode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.LanguageCode} returns this
 */
proto.Softcorp.LanguageCode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.CountryCode.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.CountryCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.CountryCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.CountryCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycodetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.CountryCode}
 */
proto.Softcorp.CountryCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.CountryCode;
  return proto.Softcorp.CountryCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.CountryCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.CountryCode}
 */
proto.Softcorp.CountryCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.CountryCodeType} */ (reader.readEnum());
      msg.setCountrycodetype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.CountryCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.CountryCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.CountryCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.CountryCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycodetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional CountryCodeType countryCodeType = 1;
 * @return {!proto.Softcorp.CountryCodeType}
 */
proto.Softcorp.CountryCode.prototype.getCountrycodetype = function() {
  return /** @type {!proto.Softcorp.CountryCodeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.CountryCodeType} value
 * @return {!proto.Softcorp.CountryCode} returns this
 */
proto.Softcorp.CountryCode.prototype.setCountrycodetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.CountryCode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.CountryCode} returns this
 */
proto.Softcorp.CountryCode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.SsnProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.SsnProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.SsnProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.SsnProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssnprovidertype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.SsnProvider}
 */
proto.Softcorp.SsnProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.SsnProvider;
  return proto.Softcorp.SsnProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.SsnProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.SsnProvider}
 */
proto.Softcorp.SsnProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Softcorp.SsnProviderType} */ (reader.readEnum());
      msg.setSsnprovidertype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.SsnProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.SsnProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.SsnProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.SsnProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsnprovidertype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional SsnProviderType ssnProviderType = 1;
 * @return {!proto.Softcorp.SsnProviderType}
 */
proto.Softcorp.SsnProvider.prototype.getSsnprovidertype = function() {
  return /** @type {!proto.Softcorp.SsnProviderType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Softcorp.SsnProviderType} value
 * @return {!proto.Softcorp.SsnProvider} returns this
 */
proto.Softcorp.SsnProvider.prototype.setSsnprovidertype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.SsnProvider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.SsnProvider} returns this
 */
proto.Softcorp.SsnProvider.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Ssn.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Ssn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Ssn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Ssn.toObject = function(includeInstance, msg) {
  var f, obj = {
    ssn: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ssnhash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ssnidentifier: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ssnprovider: (f = msg.getSsnprovider()) && proto.Softcorp.SsnProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Ssn}
 */
proto.Softcorp.Ssn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Ssn;
  return proto.Softcorp.Ssn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Ssn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Ssn}
 */
proto.Softcorp.Ssn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsn(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsnhash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsnidentifier(value);
      break;
    case 4:
      var value = new proto.Softcorp.SsnProvider;
      reader.readMessage(value,proto.Softcorp.SsnProvider.deserializeBinaryFromReader);
      msg.setSsnprovider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Ssn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Ssn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Ssn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Ssn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSsn();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSsnhash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSsnidentifier();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSsnprovider();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Softcorp.SsnProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ssn = 1;
 * @return {string}
 */
proto.Softcorp.Ssn.prototype.getSsn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Ssn} returns this
 */
proto.Softcorp.Ssn.prototype.setSsn = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ssnHash = 2;
 * @return {string}
 */
proto.Softcorp.Ssn.prototype.getSsnhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Ssn} returns this
 */
proto.Softcorp.Ssn.prototype.setSsnhash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ssnIdentifier = 3;
 * @return {string}
 */
proto.Softcorp.Ssn.prototype.getSsnidentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Ssn} returns this
 */
proto.Softcorp.Ssn.prototype.setSsnidentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SsnProvider ssnProvider = 4;
 * @return {?proto.Softcorp.SsnProvider}
 */
proto.Softcorp.Ssn.prototype.getSsnprovider = function() {
  return /** @type{?proto.Softcorp.SsnProvider} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.SsnProvider, 4));
};


/**
 * @param {?proto.Softcorp.SsnProvider|undefined} value
 * @return {!proto.Softcorp.Ssn} returns this
*/
proto.Softcorp.Ssn.prototype.setSsnprovider = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.Ssn} returns this
 */
proto.Softcorp.Ssn.prototype.clearSsnprovider = function() {
  return this.setSsnprovider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.Ssn.prototype.hasSsnprovider = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.User.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 4, 0),
    birthday: (f = msg.getBirthday()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    country: (f = msg.getCountry()) && proto.Softcorp.CountryCode.toObject(includeInstance, f),
    blocked: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    preferredlanguage: (f = msg.getPreferredlanguage()) && proto.Softcorp.LanguageCode.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    ssnid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    ssnhash: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.User}
 */
proto.Softcorp.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.User;
  return proto.Softcorp.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.User}
 */
proto.Softcorp.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {!proto.Softcorp.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBirthday(value);
      break;
    case 6:
      var value = new proto.Softcorp.CountryCode;
      reader.readMessage(value,proto.Softcorp.CountryCode.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 8:
      var value = new proto.Softcorp.LanguageCode;
      reader.readMessage(value,proto.Softcorp.LanguageCode.deserializeBinaryFromReader);
      msg.setPreferredlanguage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsnid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsnhash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getBirthday();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Softcorp.CountryCode.serializeBinaryToWriter
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getPreferredlanguage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.Softcorp.LanguageCode.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSsnid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSsnhash();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Softcorp.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.Softcorp.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Softcorp.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Gender gender = 4;
 * @return {!proto.Softcorp.Gender}
 */
proto.Softcorp.User.prototype.getGender = function() {
  return /** @type {!proto.Softcorp.Gender} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.Softcorp.Gender} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp birthday = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.User.prototype.getBirthday = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.User} returns this
*/
proto.Softcorp.User.prototype.setBirthday = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.clearBirthday = function() {
  return this.setBirthday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.User.prototype.hasBirthday = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CountryCode country = 6;
 * @return {?proto.Softcorp.CountryCode}
 */
proto.Softcorp.User.prototype.getCountry = function() {
  return /** @type{?proto.Softcorp.CountryCode} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.CountryCode, 6));
};


/**
 * @param {?proto.Softcorp.CountryCode|undefined} value
 * @return {!proto.Softcorp.User} returns this
*/
proto.Softcorp.User.prototype.setCountry = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.clearCountry = function() {
  return this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.User.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool blocked = 7;
 * @return {boolean}
 */
proto.Softcorp.User.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional LanguageCode preferredLanguage = 8;
 * @return {?proto.Softcorp.LanguageCode}
 */
proto.Softcorp.User.prototype.getPreferredlanguage = function() {
  return /** @type{?proto.Softcorp.LanguageCode} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.LanguageCode, 8));
};


/**
 * @param {?proto.Softcorp.LanguageCode|undefined} value
 * @return {!proto.Softcorp.User} returns this
*/
proto.Softcorp.User.prototype.setPreferredlanguage = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.clearPreferredlanguage = function() {
  return this.setPreferredlanguage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.User.prototype.hasPreferredlanguage = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.Softcorp.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.User.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.User} returns this
*/
proto.Softcorp.User.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.User.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.User.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.User} returns this
*/
proto.Softcorp.User.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.User.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string ssnId = 12;
 * @return {string}
 */
proto.Softcorp.User.prototype.getSsnid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setSsnid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string ssnHash = 13;
 * @return {string}
 */
proto.Softcorp.User.prototype.getSsnhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.User} returns this
 */
proto.Softcorp.User.prototype.setSsnhash = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.ClientMetadata.repeatedFields_ = [21,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ClientMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ClientMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ClientMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ClientMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    allowedemailsList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    about: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userownerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    agelowerlimit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ageupperlimit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    allowedcountriesList: jspb.Message.toObjectList(msg.getAllowedcountriesList(),
    proto.Softcorp.CountryCode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ClientMetadata}
 */
proto.Softcorp.ClientMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ClientMetadata;
  return proto.Softcorp.ClientMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ClientMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ClientMetadata}
 */
proto.Softcorp.ClientMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addAllowedemails(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbout(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserownerid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAgelowerlimit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAgeupperlimit(value);
      break;
    case 7:
      var value = new proto.Softcorp.CountryCode;
      reader.readMessage(value,proto.Softcorp.CountryCode.deserializeBinaryFromReader);
      msg.addAllowedcountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ClientMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ClientMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ClientMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ClientMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAllowedemailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getAbout();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserownerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAgelowerlimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAgeupperlimit();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAllowedcountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.Softcorp.CountryCode.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool isOpen = 1;
 * @return {boolean}
 */
proto.Softcorp.ClientMetadata.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated string allowedEmails = 21;
 * @return {!Array<string>}
 */
proto.Softcorp.ClientMetadata.prototype.getAllowedemailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setAllowedemailsList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.addAllowedemails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.clearAllowedemailsList = function() {
  return this.setAllowedemailsList([]);
};


/**
 * optional string about = 3;
 * @return {string}
 */
proto.Softcorp.ClientMetadata.prototype.getAbout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setAbout = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string userOwnerId = 4;
 * @return {string}
 */
proto.Softcorp.ClientMetadata.prototype.getUserownerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setUserownerid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 ageLowerLimit = 5;
 * @return {number}
 */
proto.Softcorp.ClientMetadata.prototype.getAgelowerlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setAgelowerlimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 ageUpperLimit = 6;
 * @return {number}
 */
proto.Softcorp.ClientMetadata.prototype.getAgeupperlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.setAgeupperlimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated CountryCode allowedCountries = 7;
 * @return {!Array<!proto.Softcorp.CountryCode>}
 */
proto.Softcorp.ClientMetadata.prototype.getAllowedcountriesList = function() {
  return /** @type{!Array<!proto.Softcorp.CountryCode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.CountryCode, 7));
};


/**
 * @param {!Array<!proto.Softcorp.CountryCode>} value
 * @return {!proto.Softcorp.ClientMetadata} returns this
*/
proto.Softcorp.ClientMetadata.prototype.setAllowedcountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.Softcorp.CountryCode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.CountryCode}
 */
proto.Softcorp.ClientMetadata.prototype.addAllowedcountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.Softcorp.CountryCode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientMetadata} returns this
 */
proto.Softcorp.ClientMetadata.prototype.clearAllowedcountriesList = function() {
  return this.setAllowedcountriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.ClientApp.repeatedFields_ = [10,11,12,13,14,17,18,19,20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ClientApp.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ClientApp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ClientApp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ClientApp.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contactemail: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ownerid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    appwebsite: jspb.Message.getFieldWithDefault(msg, 6, ""),
    logourl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    termsurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    clientmetadata: (f = msg.getClientmetadata()) && proto.Softcorp.ClientMetadata.toObject(includeInstance, f),
    audienceList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    scopesList: jspb.Message.toObjectList(msg.getScopesList(),
    proto.Softcorp.Scope.toObject, includeInstance),
    grantsList: jspb.Message.toObjectList(msg.getGrantsList(),
    proto.Softcorp.Grant.toObject, includeInstance),
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.Softcorp.OauthResponse.toObject, includeInstance),
    callbacksList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    availablescopesList: jspb.Message.toObjectList(msg.getAvailablescopesList(),
    proto.Softcorp.Scope.toObject, includeInstance),
    availablegrantsList: jspb.Message.toObjectList(msg.getAvailablegrantsList(),
    proto.Softcorp.Grant.toObject, includeInstance),
    availableresponsesList: jspb.Message.toObjectList(msg.getAvailableresponsesList(),
    proto.Softcorp.OauthResponse.toObject, includeInstance),
    availablecountriesList: jspb.Message.toObjectList(msg.getAvailablecountriesList(),
    proto.Softcorp.CountryCode.toObject, includeInstance),
    advancedscopesList: jspb.Message.toObjectList(msg.getAdvancedscopesList(),
    proto.Softcorp.Scope.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ClientApp}
 */
proto.Softcorp.ClientApp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ClientApp;
  return proto.Softcorp.ClientApp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ClientApp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ClientApp}
 */
proto.Softcorp.ClientApp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactemail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppwebsite(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTermsurl(value);
      break;
    case 9:
      var value = new proto.Softcorp.ClientMetadata;
      reader.readMessage(value,proto.Softcorp.ClientMetadata.deserializeBinaryFromReader);
      msg.setClientmetadata(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addAudience(value);
      break;
    case 11:
      var value = new proto.Softcorp.Scope;
      reader.readMessage(value,proto.Softcorp.Scope.deserializeBinaryFromReader);
      msg.addScopes(value);
      break;
    case 12:
      var value = new proto.Softcorp.Grant;
      reader.readMessage(value,proto.Softcorp.Grant.deserializeBinaryFromReader);
      msg.addGrants(value);
      break;
    case 13:
      var value = new proto.Softcorp.OauthResponse;
      reader.readMessage(value,proto.Softcorp.OauthResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addCallbacks(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 17:
      var value = new proto.Softcorp.Scope;
      reader.readMessage(value,proto.Softcorp.Scope.deserializeBinaryFromReader);
      msg.addAvailablescopes(value);
      break;
    case 18:
      var value = new proto.Softcorp.Grant;
      reader.readMessage(value,proto.Softcorp.Grant.deserializeBinaryFromReader);
      msg.addAvailablegrants(value);
      break;
    case 19:
      var value = new proto.Softcorp.OauthResponse;
      reader.readMessage(value,proto.Softcorp.OauthResponse.deserializeBinaryFromReader);
      msg.addAvailableresponses(value);
      break;
    case 20:
      var value = new proto.Softcorp.CountryCode;
      reader.readMessage(value,proto.Softcorp.CountryCode.deserializeBinaryFromReader);
      msg.addAvailablecountries(value);
      break;
    case 21:
      var value = new proto.Softcorp.Scope;
      reader.readMessage(value,proto.Softcorp.Scope.deserializeBinaryFromReader);
      msg.addAdvancedscopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ClientApp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ClientApp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ClientApp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ClientApp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContactemail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAppwebsite();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTermsurl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getClientmetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Softcorp.ClientMetadata.serializeBinaryToWriter
    );
  }
  f = message.getAudienceList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.Softcorp.Scope.serializeBinaryToWriter
    );
  }
  f = message.getGrantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.Softcorp.Grant.serializeBinaryToWriter
    );
  }
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.Softcorp.OauthResponse.serializeBinaryToWriter
    );
  }
  f = message.getCallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAvailablescopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.Softcorp.Scope.serializeBinaryToWriter
    );
  }
  f = message.getAvailablegrantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.Softcorp.Grant.serializeBinaryToWriter
    );
  }
  f = message.getAvailableresponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.Softcorp.OauthResponse.serializeBinaryToWriter
    );
  }
  f = message.getAvailablecountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.Softcorp.CountryCode.serializeBinaryToWriter
    );
  }
  f = message.getAdvancedscopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.Softcorp.Scope.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string contactEmail = 4;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getContactemail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setContactemail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ownerId = 5;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string appWebsite = 6;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getAppwebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setAppwebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string logoUrl = 7;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string termsUrl = 8;
 * @return {string}
 */
proto.Softcorp.ClientApp.prototype.getTermsurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setTermsurl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ClientMetadata clientMetadata = 9;
 * @return {?proto.Softcorp.ClientMetadata}
 */
proto.Softcorp.ClientApp.prototype.getClientmetadata = function() {
  return /** @type{?proto.Softcorp.ClientMetadata} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientMetadata, 9));
};


/**
 * @param {?proto.Softcorp.ClientMetadata|undefined} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setClientmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearClientmetadata = function() {
  return this.setClientmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ClientApp.prototype.hasClientmetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string audience = 10;
 * @return {!Array<string>}
 */
proto.Softcorp.ClientApp.prototype.getAudienceList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setAudienceList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.addAudience = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAudienceList = function() {
  return this.setAudienceList([]);
};


/**
 * repeated Scope scopes = 11;
 * @return {!Array<!proto.Softcorp.Scope>}
 */
proto.Softcorp.ClientApp.prototype.getScopesList = function() {
  return /** @type{!Array<!proto.Softcorp.Scope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Scope, 11));
};


/**
 * @param {!Array<!proto.Softcorp.Scope>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setScopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.Softcorp.Scope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Scope}
 */
proto.Softcorp.ClientApp.prototype.addScopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Softcorp.Scope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * repeated Grant grants = 12;
 * @return {!Array<!proto.Softcorp.Grant>}
 */
proto.Softcorp.ClientApp.prototype.getGrantsList = function() {
  return /** @type{!Array<!proto.Softcorp.Grant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Grant, 12));
};


/**
 * @param {!Array<!proto.Softcorp.Grant>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setGrantsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.Softcorp.Grant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Grant}
 */
proto.Softcorp.ClientApp.prototype.addGrants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.Softcorp.Grant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearGrantsList = function() {
  return this.setGrantsList([]);
};


/**
 * repeated OauthResponse responses = 13;
 * @return {!Array<!proto.Softcorp.OauthResponse>}
 */
proto.Softcorp.ClientApp.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.Softcorp.OauthResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.OauthResponse, 13));
};


/**
 * @param {!Array<!proto.Softcorp.OauthResponse>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.Softcorp.OauthResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.OauthResponse}
 */
proto.Softcorp.ClientApp.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.Softcorp.OauthResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};


/**
 * repeated string callbacks = 14;
 * @return {!Array<string>}
 */
proto.Softcorp.ClientApp.prototype.getCallbacksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.setCallbacksList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.addCallbacks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearCallbacksList = function() {
  return this.setCallbacksList([]);
};


/**
 * optional google.protobuf.Timestamp createdAt = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.ClientApp.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ClientApp.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.Softcorp.ClientApp.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ClientApp.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated Scope availableScopes = 17;
 * @return {!Array<!proto.Softcorp.Scope>}
 */
proto.Softcorp.ClientApp.prototype.getAvailablescopesList = function() {
  return /** @type{!Array<!proto.Softcorp.Scope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Scope, 17));
};


/**
 * @param {!Array<!proto.Softcorp.Scope>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setAvailablescopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.Softcorp.Scope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Scope}
 */
proto.Softcorp.ClientApp.prototype.addAvailablescopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.Softcorp.Scope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAvailablescopesList = function() {
  return this.setAvailablescopesList([]);
};


/**
 * repeated Grant availableGrants = 18;
 * @return {!Array<!proto.Softcorp.Grant>}
 */
proto.Softcorp.ClientApp.prototype.getAvailablegrantsList = function() {
  return /** @type{!Array<!proto.Softcorp.Grant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Grant, 18));
};


/**
 * @param {!Array<!proto.Softcorp.Grant>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setAvailablegrantsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.Softcorp.Grant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Grant}
 */
proto.Softcorp.ClientApp.prototype.addAvailablegrants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.Softcorp.Grant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAvailablegrantsList = function() {
  return this.setAvailablegrantsList([]);
};


/**
 * repeated OauthResponse availableResponses = 19;
 * @return {!Array<!proto.Softcorp.OauthResponse>}
 */
proto.Softcorp.ClientApp.prototype.getAvailableresponsesList = function() {
  return /** @type{!Array<!proto.Softcorp.OauthResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.OauthResponse, 19));
};


/**
 * @param {!Array<!proto.Softcorp.OauthResponse>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setAvailableresponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.Softcorp.OauthResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.OauthResponse}
 */
proto.Softcorp.ClientApp.prototype.addAvailableresponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.Softcorp.OauthResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAvailableresponsesList = function() {
  return this.setAvailableresponsesList([]);
};


/**
 * repeated CountryCode availableCountries = 20;
 * @return {!Array<!proto.Softcorp.CountryCode>}
 */
proto.Softcorp.ClientApp.prototype.getAvailablecountriesList = function() {
  return /** @type{!Array<!proto.Softcorp.CountryCode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.CountryCode, 20));
};


/**
 * @param {!Array<!proto.Softcorp.CountryCode>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setAvailablecountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.Softcorp.CountryCode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.CountryCode}
 */
proto.Softcorp.ClientApp.prototype.addAvailablecountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.Softcorp.CountryCode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAvailablecountriesList = function() {
  return this.setAvailablecountriesList([]);
};


/**
 * repeated Scope advancedScopes = 21;
 * @return {!Array<!proto.Softcorp.Scope>}
 */
proto.Softcorp.ClientApp.prototype.getAdvancedscopesList = function() {
  return /** @type{!Array<!proto.Softcorp.Scope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Scope, 21));
};


/**
 * @param {!Array<!proto.Softcorp.Scope>} value
 * @return {!proto.Softcorp.ClientApp} returns this
*/
proto.Softcorp.ClientApp.prototype.setAdvancedscopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.Softcorp.Scope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Scope}
 */
proto.Softcorp.ClientApp.prototype.addAdvancedscopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.Softcorp.Scope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.ClientApp} returns this
 */
proto.Softcorp.ClientApp.prototype.clearAdvancedscopesList = function() {
  return this.setAdvancedscopesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.PublicUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.PublicUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.PublicUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.PublicUserRequest}
 */
proto.Softcorp.PublicUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.PublicUserRequest;
  return proto.Softcorp.PublicUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.PublicUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.PublicUserRequest}
 */
proto.Softcorp.PublicUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.PublicUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.PublicUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.PublicUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.Softcorp.PublicUserRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.PublicUserRequest} returns this
 */
proto.Softcorp.PublicUserRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.PublicUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.PublicUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.PublicUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.Softcorp.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.PublicUserResponse}
 */
proto.Softcorp.PublicUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.PublicUserResponse;
  return proto.Softcorp.PublicUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.PublicUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.PublicUserResponse}
 */
proto.Softcorp.PublicUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.User;
      reader.readMessage(value,proto.Softcorp.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.PublicUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.PublicUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.PublicUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.Softcorp.User}
 */
proto.Softcorp.PublicUserResponse.prototype.getUser = function() {
  return /** @type{?proto.Softcorp.User} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.User, 1));
};


/**
 * @param {?proto.Softcorp.User|undefined} value
 * @return {!proto.Softcorp.PublicUserResponse} returns this
*/
proto.Softcorp.PublicUserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicUserResponse} returns this
 */
proto.Softcorp.PublicUserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.AdminUserRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AdminUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AdminUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AdminUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    idsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    emailsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    decrypt: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    user: (f = msg.getUser()) && proto.Softcorp.User.toObject(includeInstance, f),
    overwriteid: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AdminUserRequest}
 */
proto.Softcorp.AdminUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AdminUserRequest;
  return proto.Softcorp.AdminUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AdminUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AdminUserRequest}
 */
proto.Softcorp.AdminUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addEmails(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDecrypt(value);
      break;
    case 6:
      var value = new proto.Softcorp.User;
      reader.readMessage(value,proto.Softcorp.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverwriteid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AdminUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AdminUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AdminUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getEmailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDecrypt();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Softcorp.User.serializeBinaryToWriter
    );
  }
  f = message.getOverwriteid();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.Softcorp.AdminUserRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.Softcorp.AdminUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string ids = 3;
 * @return {!Array<string>}
 */
proto.Softcorp.AdminUserRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * repeated string emails = 4;
 * @return {!Array<string>}
 */
proto.Softcorp.AdminUserRequest.prototype.getEmailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setEmailsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.addEmails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.clearEmailsList = function() {
  return this.setEmailsList([]);
};


/**
 * optional bool decrypt = 5;
 * @return {boolean}
 */
proto.Softcorp.AdminUserRequest.prototype.getDecrypt = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setDecrypt = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional User user = 6;
 * @return {?proto.Softcorp.User}
 */
proto.Softcorp.AdminUserRequest.prototype.getUser = function() {
  return /** @type{?proto.Softcorp.User} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.User, 6));
};


/**
 * @param {?proto.Softcorp.User|undefined} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
*/
proto.Softcorp.AdminUserRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminUserRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool overwriteId = 7;
 * @return {boolean}
 */
proto.Softcorp.AdminUserRequest.prototype.getOverwriteid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminUserRequest} returns this
 */
proto.Softcorp.AdminUserRequest.prototype.setOverwriteid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.AdminUserResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AdminUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AdminUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AdminUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.Softcorp.User.toObject(includeInstance, f),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.Softcorp.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AdminUserResponse}
 */
proto.Softcorp.AdminUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AdminUserResponse;
  return proto.Softcorp.AdminUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AdminUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AdminUserResponse}
 */
proto.Softcorp.AdminUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.User;
      reader.readMessage(value,proto.Softcorp.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.Softcorp.User;
      reader.readMessage(value,proto.Softcorp.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AdminUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AdminUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AdminUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.User.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Softcorp.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.Softcorp.User}
 */
proto.Softcorp.AdminUserResponse.prototype.getUser = function() {
  return /** @type{?proto.Softcorp.User} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.User, 1));
};


/**
 * @param {?proto.Softcorp.User|undefined} value
 * @return {!proto.Softcorp.AdminUserResponse} returns this
*/
proto.Softcorp.AdminUserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminUserResponse} returns this
 */
proto.Softcorp.AdminUserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated User users = 2;
 * @return {!Array<!proto.Softcorp.User>}
 */
proto.Softcorp.AdminUserResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.Softcorp.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.User, 2));
};


/**
 * @param {!Array<!proto.Softcorp.User>} value
 * @return {!proto.Softcorp.AdminUserResponse} returns this
*/
proto.Softcorp.AdminUserResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Softcorp.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.User}
 */
proto.Softcorp.AdminUserResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Softcorp.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.AdminUserResponse} returns this
 */
proto.Softcorp.AdminUserResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AuthPublicRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AuthPublicRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AuthPublicRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AuthPublicRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    challenge: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 4, 0),
    consent: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    jwtidtoken: jspb.Message.getFieldWithDefault(msg, 6, ""),
    ssnprovider: (f = msg.getSsnprovider()) && proto.Softcorp.SsnProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AuthPublicRequest}
 */
proto.Softcorp.AuthPublicRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AuthPublicRequest;
  return proto.Softcorp.AuthPublicRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AuthPublicRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AuthPublicRequest}
 */
proto.Softcorp.AuthPublicRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallenge(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {!proto.Softcorp.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConsent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwtidtoken(value);
      break;
    case 7:
      var value = new proto.Softcorp.SsnProvider;
      reader.readMessage(value,proto.Softcorp.SsnProvider.deserializeBinaryFromReader);
      msg.setSsnprovider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AuthPublicRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AuthPublicRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AuthPublicRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AuthPublicRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallenge();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getConsent();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getJwtidtoken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSsnprovider();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.Softcorp.SsnProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional string challenge = 1;
 * @return {string}
 */
proto.Softcorp.AuthPublicRequest.prototype.getChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.Softcorp.AuthPublicRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.Softcorp.AuthPublicRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Gender gender = 4;
 * @return {!proto.Softcorp.Gender}
 */
proto.Softcorp.AuthPublicRequest.prototype.getGender = function() {
  return /** @type {!proto.Softcorp.Gender} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.Softcorp.Gender} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional bool consent = 5;
 * @return {boolean}
 */
proto.Softcorp.AuthPublicRequest.prototype.getConsent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setConsent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string jwtIdToken = 6;
 * @return {string}
 */
proto.Softcorp.AuthPublicRequest.prototype.getJwtidtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.setJwtidtoken = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional SsnProvider ssnProvider = 7;
 * @return {?proto.Softcorp.SsnProvider}
 */
proto.Softcorp.AuthPublicRequest.prototype.getSsnprovider = function() {
  return /** @type{?proto.Softcorp.SsnProvider} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.SsnProvider, 7));
};


/**
 * @param {?proto.Softcorp.SsnProvider|undefined} value
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
*/
proto.Softcorp.AuthPublicRequest.prototype.setSsnprovider = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AuthPublicRequest} returns this
 */
proto.Softcorp.AuthPublicRequest.prototype.clearSsnprovider = function() {
  return this.setSsnprovider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AuthPublicRequest.prototype.hasSsnprovider = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AuthPublicResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AuthPublicResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AuthPublicResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AuthPublicResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    nameofuser: jspb.Message.getFieldWithDefault(msg, 2, ""),
    redirectaddr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AuthPublicResponse}
 */
proto.Softcorp.AuthPublicResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AuthPublicResponse;
  return proto.Softcorp.AuthPublicResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AuthPublicResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AuthPublicResponse}
 */
proto.Softcorp.AuthPublicResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameofuser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectaddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AuthPublicResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AuthPublicResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AuthPublicResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AuthPublicResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getNameofuser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRedirectaddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ClientApp client = 1;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.AuthPublicResponse.prototype.getClient = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 1));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.AuthPublicResponse} returns this
*/
proto.Softcorp.AuthPublicResponse.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AuthPublicResponse} returns this
 */
proto.Softcorp.AuthPublicResponse.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AuthPublicResponse.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string nameOfUser = 2;
 * @return {string}
 */
proto.Softcorp.AuthPublicResponse.prototype.getNameofuser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicResponse} returns this
 */
proto.Softcorp.AuthPublicResponse.prototype.setNameofuser = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string redirectAddr = 3;
 * @return {string}
 */
proto.Softcorp.AuthPublicResponse.prototype.getRedirectaddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AuthPublicResponse} returns this
 */
proto.Softcorp.AuthPublicResponse.prototype.setRedirectaddr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ConnectAdminRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ConnectAdminRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ConnectAdminRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectAdminRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: (f = msg.getApp()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    overwriteid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    timespan: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ConnectAdminRequest}
 */
proto.Softcorp.ConnectAdminRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ConnectAdminRequest;
  return proto.Softcorp.ConnectAdminRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ConnectAdminRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ConnectAdminRequest}
 */
proto.Softcorp.ConnectAdminRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverwriteid(value);
      break;
    case 3:
      var value = /** @type {!proto.Softcorp.Timespan} */ (reader.readEnum());
      msg.setTimespan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ConnectAdminRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ConnectAdminRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ConnectAdminRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectAdminRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getOverwriteid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTimespan();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ClientApp app = 1;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.ConnectAdminRequest.prototype.getApp = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 1));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.ConnectAdminRequest} returns this
*/
proto.Softcorp.ConnectAdminRequest.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ConnectAdminRequest} returns this
 */
proto.Softcorp.ConnectAdminRequest.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ConnectAdminRequest.prototype.hasApp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool overwriteId = 2;
 * @return {boolean}
 */
proto.Softcorp.ConnectAdminRequest.prototype.getOverwriteid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.ConnectAdminRequest} returns this
 */
proto.Softcorp.ConnectAdminRequest.prototype.setOverwriteid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Timespan timespan = 3;
 * @return {!proto.Softcorp.Timespan}
 */
proto.Softcorp.ConnectAdminRequest.prototype.getTimespan = function() {
  return /** @type {!proto.Softcorp.Timespan} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.Softcorp.Timespan} value
 * @return {!proto.Softcorp.ConnectAdminRequest} returns this
 */
proto.Softcorp.ConnectAdminRequest.prototype.setTimespan = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.ConnectAdminResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.ConnectAdminResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.ConnectAdminResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectAdminResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: (f = msg.getApp()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    metricsMap: (f = msg.getMetricsMap()) ? f.toObject(includeInstance, proto.Softcorp.ConnectMetrics.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.ConnectAdminResponse}
 */
proto.Softcorp.ConnectAdminResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.ConnectAdminResponse;
  return proto.Softcorp.ConnectAdminResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.ConnectAdminResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.ConnectAdminResponse}
 */
proto.Softcorp.ConnectAdminResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 2:
      var value = msg.getMetricsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.Softcorp.ConnectMetrics.deserializeBinaryFromReader, 0, new proto.Softcorp.ConnectMetrics());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.ConnectAdminResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.ConnectAdminResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.ConnectAdminResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.ConnectAdminResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getMetricsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.Softcorp.ConnectMetrics.serializeBinaryToWriter);
  }
};


/**
 * optional ClientApp app = 1;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.ConnectAdminResponse.prototype.getApp = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 1));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.ConnectAdminResponse} returns this
*/
proto.Softcorp.ConnectAdminResponse.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.ConnectAdminResponse} returns this
 */
proto.Softcorp.ConnectAdminResponse.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.ConnectAdminResponse.prototype.hasApp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<int32, ConnectMetrics> metrics = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.Softcorp.ConnectMetrics>}
 */
proto.Softcorp.ConnectAdminResponse.prototype.getMetricsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.Softcorp.ConnectMetrics>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.Softcorp.ConnectMetrics));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.Softcorp.ConnectAdminResponse} returns this
 */
proto.Softcorp.ConnectAdminResponse.prototype.clearMetricsMap = function() {
  this.getMetricsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.PublicDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.PublicDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.PublicDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    organization: (f = msg.getOrganization()) && proto.Softcorp.Organization.toObject(includeInstance, f),
    connectapp: (f = msg.getConnectapp()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    timespan: jspb.Message.getFieldWithDefault(msg, 4, 0),
    collaboration: (f = msg.getCollaboration()) && proto.Softcorp.Collaboration.toObject(includeInstance, f),
    secret: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.PublicDashboardRequest}
 */
proto.Softcorp.PublicDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.PublicDashboardRequest;
  return proto.Softcorp.PublicDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.PublicDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.PublicDashboardRequest}
 */
proto.Softcorp.PublicDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = new proto.Softcorp.Organization;
      reader.readMessage(value,proto.Softcorp.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 3:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setConnectapp(value);
      break;
    case 4:
      var value = /** @type {!proto.Softcorp.Timespan} */ (reader.readEnum());
      msg.setTimespan(value);
      break;
    case 5:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.setCollaboration(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.PublicDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.PublicDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.PublicDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Softcorp.Organization.serializeBinaryToWriter
    );
  }
  f = message.getConnectapp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getTimespan();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCollaboration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.setAccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Organization organization = 2;
 * @return {?proto.Softcorp.Organization}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getOrganization = function() {
  return /** @type{?proto.Softcorp.Organization} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Organization, 2));
};


/**
 * @param {?proto.Softcorp.Organization|undefined} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
*/
proto.Softcorp.PublicDashboardRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ClientApp connectApp = 3;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getConnectapp = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 3));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
*/
proto.Softcorp.PublicDashboardRequest.prototype.setConnectapp = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.clearConnectapp = function() {
  return this.setConnectapp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardRequest.prototype.hasConnectapp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Timespan timespan = 4;
 * @return {!proto.Softcorp.Timespan}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getTimespan = function() {
  return /** @type {!proto.Softcorp.Timespan} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.Softcorp.Timespan} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.setTimespan = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Collaboration collaboration = 5;
 * @return {?proto.Softcorp.Collaboration}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getCollaboration = function() {
  return /** @type{?proto.Softcorp.Collaboration} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Collaboration, 5));
};


/**
 * @param {?proto.Softcorp.Collaboration|undefined} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
*/
proto.Softcorp.PublicDashboardRequest.prototype.setCollaboration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.clearCollaboration = function() {
  return this.setCollaboration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardRequest.prototype.hasCollaboration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string secret = 6;
 * @return {string}
 */
proto.Softcorp.PublicDashboardRequest.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.PublicDashboardRequest} returns this
 */
proto.Softcorp.PublicDashboardRequest.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.PublicDashboardResponse.repeatedFields_ = [2,4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.PublicDashboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.PublicDashboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.PublicDashboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicDashboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && proto.Softcorp.Organization.toObject(includeInstance, f),
    organizationsList: jspb.Message.toObjectList(msg.getOrganizationsList(),
    proto.Softcorp.Organization.toObject, includeInstance),
    collaboration: (f = msg.getCollaboration()) && proto.Softcorp.Collaboration.toObject(includeInstance, f),
    collaborationsList: jspb.Message.toObjectList(msg.getCollaborationsList(),
    proto.Softcorp.Collaboration.toObject, includeInstance),
    secret: jspb.Message.getFieldWithDefault(msg, 5, ""),
    connectapp: (f = msg.getConnectapp()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    connectappsList: jspb.Message.toObjectList(msg.getConnectappsList(),
    proto.Softcorp.ClientApp.toObject, includeInstance),
    metricsMap: (f = msg.getMetricsMap()) ? f.toObject(includeInstance, proto.Softcorp.ConnectMetrics.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.PublicDashboardResponse}
 */
proto.Softcorp.PublicDashboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.PublicDashboardResponse;
  return proto.Softcorp.PublicDashboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.PublicDashboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.PublicDashboardResponse}
 */
proto.Softcorp.PublicDashboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.Organization;
      reader.readMessage(value,proto.Softcorp.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.Softcorp.Organization;
      reader.readMessage(value,proto.Softcorp.Organization.deserializeBinaryFromReader);
      msg.addOrganizations(value);
      break;
    case 3:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.setCollaboration(value);
      break;
    case 4:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.addCollaborations(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 6:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setConnectapp(value);
      break;
    case 7:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.addConnectapps(value);
      break;
    case 8:
      var value = msg.getMetricsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.Softcorp.ConnectMetrics.deserializeBinaryFromReader, 0, new proto.Softcorp.ConnectMetrics());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.PublicDashboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.PublicDashboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.PublicDashboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.PublicDashboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.Organization.serializeBinaryToWriter
    );
  }
  f = message.getOrganizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Softcorp.Organization.serializeBinaryToWriter
    );
  }
  f = message.getCollaboration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getCollaborationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConnectapp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getConnectappsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getMetricsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.Softcorp.ConnectMetrics.serializeBinaryToWriter);
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.Softcorp.Organization}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getOrganization = function() {
  return /** @type{?proto.Softcorp.Organization} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Organization, 1));
};


/**
 * @param {?proto.Softcorp.Organization|undefined} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardResponse.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Organization organizations = 2;
 * @return {!Array<!proto.Softcorp.Organization>}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getOrganizationsList = function() {
  return /** @type{!Array<!proto.Softcorp.Organization>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Organization, 2));
};


/**
 * @param {!Array<!proto.Softcorp.Organization>} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setOrganizationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Softcorp.Organization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Organization}
 */
proto.Softcorp.PublicDashboardResponse.prototype.addOrganizations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Softcorp.Organization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearOrganizationsList = function() {
  return this.setOrganizationsList([]);
};


/**
 * optional Collaboration collaboration = 3;
 * @return {?proto.Softcorp.Collaboration}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getCollaboration = function() {
  return /** @type{?proto.Softcorp.Collaboration} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Collaboration, 3));
};


/**
 * @param {?proto.Softcorp.Collaboration|undefined} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setCollaboration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearCollaboration = function() {
  return this.setCollaboration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardResponse.prototype.hasCollaboration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Collaboration collaborations = 4;
 * @return {!Array<!proto.Softcorp.Collaboration>}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getCollaborationsList = function() {
  return /** @type{!Array<!proto.Softcorp.Collaboration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Collaboration, 4));
};


/**
 * @param {!Array<!proto.Softcorp.Collaboration>} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setCollaborationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Softcorp.Collaboration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Collaboration}
 */
proto.Softcorp.PublicDashboardResponse.prototype.addCollaborations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Softcorp.Collaboration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearCollaborationsList = function() {
  return this.setCollaborationsList([]);
};


/**
 * optional string secret = 5;
 * @return {string}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ClientApp connectApp = 6;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getConnectapp = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 6));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setConnectapp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearConnectapp = function() {
  return this.setConnectapp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.PublicDashboardResponse.prototype.hasConnectapp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated ClientApp connectApps = 7;
 * @return {!Array<!proto.Softcorp.ClientApp>}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getConnectappsList = function() {
  return /** @type{!Array<!proto.Softcorp.ClientApp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.ClientApp, 7));
};


/**
 * @param {!Array<!proto.Softcorp.ClientApp>} value
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
*/
proto.Softcorp.PublicDashboardResponse.prototype.setConnectappsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.Softcorp.ClientApp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.ClientApp}
 */
proto.Softcorp.PublicDashboardResponse.prototype.addConnectapps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.Softcorp.ClientApp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearConnectappsList = function() {
  return this.setConnectappsList([]);
};


/**
 * map<int32, ConnectMetrics> metrics = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.Softcorp.ConnectMetrics>}
 */
proto.Softcorp.PublicDashboardResponse.prototype.getMetricsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.Softcorp.ConnectMetrics>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.Softcorp.ConnectMetrics));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.Softcorp.PublicDashboardResponse} returns this
 */
proto.Softcorp.PublicDashboardResponse.prototype.clearMetricsMap = function() {
  this.getMetricsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AdminCollaborationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AdminCollaborationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminCollaborationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organization: (f = msg.getOrganization()) && proto.Softcorp.Organization.toObject(includeInstance, f),
    connectapp: (f = msg.getConnectapp()) && proto.Softcorp.ClientApp.toObject(includeInstance, f),
    accesstoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    collaboration: (f = msg.getCollaboration()) && proto.Softcorp.Collaboration.toObject(includeInstance, f),
    acceptcollaboration: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    secret: jspb.Message.getFieldWithDefault(msg, 6, ""),
    onlyconnect: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    onlyorganization: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    onlyaccepted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AdminCollaborationRequest}
 */
proto.Softcorp.AdminCollaborationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AdminCollaborationRequest;
  return proto.Softcorp.AdminCollaborationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AdminCollaborationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AdminCollaborationRequest}
 */
proto.Softcorp.AdminCollaborationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.Organization;
      reader.readMessage(value,proto.Softcorp.Organization.deserializeBinaryFromReader);
      msg.setOrganization(value);
      break;
    case 2:
      var value = new proto.Softcorp.ClientApp;
      reader.readMessage(value,proto.Softcorp.ClientApp.deserializeBinaryFromReader);
      msg.setConnectapp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 4:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.setCollaboration(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcceptcollaboration(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyconnect(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyorganization(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyaccepted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AdminCollaborationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AdminCollaborationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminCollaborationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganization();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.Organization.serializeBinaryToWriter
    );
  }
  f = message.getConnectapp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Softcorp.ClientApp.serializeBinaryToWriter
    );
  }
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCollaboration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getAcceptcollaboration();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOnlyconnect();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getOnlyorganization();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getOnlyaccepted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional Organization organization = 1;
 * @return {?proto.Softcorp.Organization}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getOrganization = function() {
  return /** @type{?proto.Softcorp.Organization} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Organization, 1));
};


/**
 * @param {?proto.Softcorp.Organization|undefined} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
*/
proto.Softcorp.AdminCollaborationRequest.prototype.setOrganization = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.clearOrganization = function() {
  return this.setOrganization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.hasOrganization = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ClientApp connectApp = 2;
 * @return {?proto.Softcorp.ClientApp}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getConnectapp = function() {
  return /** @type{?proto.Softcorp.ClientApp} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.ClientApp, 2));
};


/**
 * @param {?proto.Softcorp.ClientApp|undefined} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
*/
proto.Softcorp.AdminCollaborationRequest.prototype.setConnectapp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.clearConnectapp = function() {
  return this.setConnectapp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.hasConnectapp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string accessToken = 3;
 * @return {string}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setAccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Collaboration collaboration = 4;
 * @return {?proto.Softcorp.Collaboration}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getCollaboration = function() {
  return /** @type{?proto.Softcorp.Collaboration} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Collaboration, 4));
};


/**
 * @param {?proto.Softcorp.Collaboration|undefined} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
*/
proto.Softcorp.AdminCollaborationRequest.prototype.setCollaboration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.clearCollaboration = function() {
  return this.setCollaboration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.hasCollaboration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool acceptCollaboration = 5;
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getAcceptcollaboration = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setAcceptcollaboration = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string secret = 6;
 * @return {string}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool onlyConnect = 7;
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getOnlyconnect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setOnlyconnect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool onlyOrganization = 8;
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getOnlyorganization = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setOnlyorganization = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool onlyAccepted = 9;
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationRequest.prototype.getOnlyaccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Softcorp.AdminCollaborationRequest} returns this
 */
proto.Softcorp.AdminCollaborationRequest.prototype.setOnlyaccepted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Softcorp.AdminCollaborationResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.AdminCollaborationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.AdminCollaborationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminCollaborationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collaboration: (f = msg.getCollaboration()) && proto.Softcorp.Collaboration.toObject(includeInstance, f),
    collaborationsList: jspb.Message.toObjectList(msg.getCollaborationsList(),
    proto.Softcorp.Collaboration.toObject, includeInstance),
    secret: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.AdminCollaborationResponse}
 */
proto.Softcorp.AdminCollaborationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.AdminCollaborationResponse;
  return proto.Softcorp.AdminCollaborationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.AdminCollaborationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.AdminCollaborationResponse}
 */
proto.Softcorp.AdminCollaborationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.setCollaboration(value);
      break;
    case 2:
      var value = new proto.Softcorp.Collaboration;
      reader.readMessage(value,proto.Softcorp.Collaboration.deserializeBinaryFromReader);
      msg.addCollaborations(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.AdminCollaborationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.AdminCollaborationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.AdminCollaborationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollaboration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getCollaborationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Softcorp.Collaboration.serializeBinaryToWriter
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Collaboration collaboration = 1;
 * @return {?proto.Softcorp.Collaboration}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.getCollaboration = function() {
  return /** @type{?proto.Softcorp.Collaboration} */ (
    jspb.Message.getWrapperField(this, proto.Softcorp.Collaboration, 1));
};


/**
 * @param {?proto.Softcorp.Collaboration|undefined} value
 * @return {!proto.Softcorp.AdminCollaborationResponse} returns this
*/
proto.Softcorp.AdminCollaborationResponse.prototype.setCollaboration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Softcorp.AdminCollaborationResponse} returns this
 */
proto.Softcorp.AdminCollaborationResponse.prototype.clearCollaboration = function() {
  return this.setCollaboration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.hasCollaboration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Collaboration collaborations = 2;
 * @return {!Array<!proto.Softcorp.Collaboration>}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.getCollaborationsList = function() {
  return /** @type{!Array<!proto.Softcorp.Collaboration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Softcorp.Collaboration, 2));
};


/**
 * @param {!Array<!proto.Softcorp.Collaboration>} value
 * @return {!proto.Softcorp.AdminCollaborationResponse} returns this
*/
proto.Softcorp.AdminCollaborationResponse.prototype.setCollaborationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Softcorp.Collaboration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Softcorp.Collaboration}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.addCollaborations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Softcorp.Collaboration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Softcorp.AdminCollaborationResponse} returns this
 */
proto.Softcorp.AdminCollaborationResponse.prototype.clearCollaborationsList = function() {
  return this.setCollaborationsList([]);
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.Softcorp.AdminCollaborationResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.AdminCollaborationResponse} returns this
 */
proto.Softcorp.AdminCollaborationResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Request.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Request}
 */
proto.Softcorp.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Request;
  return proto.Softcorp.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Request}
 */
proto.Softcorp.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Softcorp.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.Softcorp.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Softcorp.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Softcorp.Response}
 */
proto.Softcorp.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Softcorp.Response;
  return proto.Softcorp.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Softcorp.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Softcorp.Response}
 */
proto.Softcorp.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Softcorp.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Softcorp.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Softcorp.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Softcorp.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.Softcorp.Response.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Softcorp.Response} returns this
 */
proto.Softcorp.Response.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.Softcorp.Timespan = {
  INVALID_TIMESPAN: 0,
  TIMESPAN_DAY: 1,
  TIMESPAN_WEEK: 2,
  TIMESPAN_MONTH: 3,
  TIMESPAN_YEAR: 4,
  TIMESPAN_ALL: 5
};

/**
 * @enum {number}
 */
proto.Softcorp.Gender = {
  INVALID_GENDER: 0,
  MALE: 1,
  FEMALE: 2,
  OTHER: 3
};

/**
 * @enum {number}
 */
proto.Softcorp.ScopeType = {
  INVALID_SCOPE: 0,
  DEFAULT_SCOPE: 1,
  OFFLINE_ACCESS_SCOPE: 2,
  GENDER_SCOPE: 3,
  NAME_SCOPE: 4,
  BIRTHDAY_SCOPE: 5,
  PREFERRED_LANGUAGE_SCOPE: 6,
  COUNTRY_SCOPE: 7
};

/**
 * @enum {number}
 */
proto.Softcorp.AgeGroup = {
  AGE_GROUP_INVALID: 0,
  AGE_GROUP_1_12: 1,
  AGE_GROUP_13_19: 2,
  AGE_GROUP_20_29: 3,
  AGE_GROUP_30_39: 4,
  AGE_GROUP_40_49: 5,
  AGE_GROUP_50_59: 6,
  AGE_GROUP_60_69: 7,
  AGE_GROUP_70_79: 8,
  AGE_GROUP_80_89: 9,
  AGE_GROUP_90_99: 10,
  AGE_GROUP_100_120: 11
};

/**
 * @enum {number}
 */
proto.Softcorp.CollaborationType = {
  INVALID_COLLABORATION: 0,
  ORGANIZATION_COLLABORATION: 1,
  CONNECT_COLLABORATION: 2
};

/**
 * @enum {number}
 */
proto.Softcorp.CollaborationRole = {
  INVALID_COLLABORATION_ROLE: 0,
  OWNER: 1,
  VIEWER: 2,
  EDITOR: 3,
  ADMIN: 4
};

/**
 * @enum {number}
 */
proto.Softcorp.GrantType = {
  INVALID_GRANT: 0,
  AUTH_GRANT: 1,
  REFRESH_GRANT: 2
};

/**
 * @enum {number}
 */
proto.Softcorp.ResponeType = {
  INVALID_RESPONSE: 0,
  CODE_RESPONSE: 1,
  TOKEN_RESPONSE: 2,
  ID_RESPONSE: 3
};

/**
 * @enum {number}
 */
proto.Softcorp.LanguageCodeType = {
  INVALID_LANGUAGE: 0,
  LANGUAGE_DK: 1,
  LANGUAGE_EN: 2,
  LANGUAGE_DE: 3
};

/**
 * @enum {number}
 */
proto.Softcorp.CountryCodeType = {
  INVALID_COUNTRY: 0,
  COUTRY_DK: 1,
  COUNTRY_NO: 2,
  COUNTRY_DE: 3
};

/**
 * @enum {number}
 */
proto.Softcorp.SsnProviderType = {
  INVALID: 0,
  MIT_ID: 1
};

goog.object.extend(exports, proto.Softcorp);
