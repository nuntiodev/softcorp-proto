name: Build, Test and Deploy

on:
  push:
    tags:
      - "*"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Checkout main branch
        run: git checkout main

      # Install protobuf
      - name: Download protobuf
        run: PB_REL="https://github.com/protocolbuffers/protobuf/releases" && curl -LO $PB_REL/download/v3.19.1/protoc-3.19.1-linux-x86_64.zip

      - name: Unpack protobuf
        run: unzip protoc-3.19.1-linux-x86_64.zip -d $HOME/.local

      - name: Export protobuf path
        run: export PATH="$PATH:$HOME/.local/bin"

      - name: Validate protoc is installed correctly
        run: protoc --version

      # Install protoc-gen-go
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17.4" # The Go version to download (if necessary) and use.

      - name: Validate golang is installed correctly
        run: go version

      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26 && go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1 && export PATH="$PATH:$(go env GOPATH)/bin"

      - name: Validate protoc-gen-go is installed correctly
        run: protoc-gen-go --version

      # Install protoc-gen-dart
      - name: Install dart
        uses: dart-lang/setup-dart@v1

      - name: Validate dart is installed correctly
        run: dart --version

      - name: Install protoc-dart-gen
        run: dart pub global activate protoc_plugin

      # Build internal proto files
      - name: Build softcorp.proto
        run: make build-proto

      # Remove build files
      - name: remove protobuf zip
        run: rm protoc-3.19.1-linux-x86_64.zip

      - name: remove protobuf
        run: rm -rf protoc-3.19.1-linux-x86_64

      # Commit and push to git
      - name: Add all new files
        run: git add --all

      - name: Check status
        run: git status

      - name: Set github name and email
        run: git config --global user.email "dev@softcorp.io" && git config --global user.name "Softcorp Automation"

      - name: Add git credentials
        run: git remote set-url --push origin https://softcorp-admin:$GITHUB_TOKEN@github.com/softcorp-io/softcorp-proto

      - name: Git commit
        run: git commit -am "updated protobuf files"

      - name: Git push
        run: git  push -u origin

      # Push to pubdev
      - name: Get tag
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Set pubdev tag
        run: sh .build/update-pubdev-version.sh ${{ steps.tag.outputs.VERSION }}

      - name: Publish
        uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        with:
          credential: ${{ secrets.PUB_DEV_CREDENTIAL_JSON }}
          skip_test: true
          flutter_package: false
          package_directory: ./dart_softcorp
